package model803

// Code generated by ../../generators/models.go. DO NOT EDIT.
// You can regenerate it by running 'go generate ./models' from the directory above.

import (
	"github.com/roockie-nebula/gosunspec"
	"github.com/roockie-nebula/gosunspec/smdx"
	"github.com/roockie-nebula/gosunspec/typelabel"
)

// Block803 - Lithium-Ion Battery Bank Model -

const (
	ModelID          = 803
	ModelLabel       = "Lithium-Ion Battery Bank Model"
	ModelDescription = ""
)

const (
	A_SF            = "A_SF"
	CellV_SF        = "CellV_SF"
	ModTmpAvg       = "ModTmpAvg"
	ModTmpMax       = "ModTmpMax"
	ModTmpMaxMod    = "ModTmpMaxMod"
	ModTmpMaxStr    = "ModTmpMaxStr"
	ModTmpMin       = "ModTmpMin"
	ModTmpMinMod    = "ModTmpMinMod"
	ModTmpMinStr    = "ModTmpMinStr"
	ModTmp_SF       = "ModTmp_SF"
	NCellBal        = "NCellBal"
	NStr            = "NStr"
	NStrCon         = "NStrCon"
	Pad1            = "Pad1"
	Pad2            = "Pad2"
	SoC_SF          = "SoC_SF"
	SoH_SF          = "SoH_SF"
	StrA            = "StrA"
	StrAAvg         = "StrAAvg"
	StrAMax         = "StrAMax"
	StrAMaxStr      = "StrAMaxStr"
	StrAMin         = "StrAMin"
	StrAMinStr      = "StrAMinStr"
	StrCellVAvg     = "StrCellVAvg"
	StrCellVMax     = "StrCellVMax"
	StrCellVMaxMod  = "StrCellVMaxMod"
	StrCellVMin     = "StrCellVMin"
	StrCellVMinMod  = "StrCellVMinMod"
	StrConFail      = "StrConFail"
	StrConSt        = "StrConSt"
	StrDisRsn       = "StrDisRsn"
	StrEvt1         = "StrEvt1"
	StrEvt2         = "StrEvt2"
	StrEvtVnd1      = "StrEvtVnd1"
	StrEvtVnd2      = "StrEvtVnd2"
	StrModTmpAvg    = "StrModTmpAvg"
	StrModTmpMax    = "StrModTmpMax"
	StrModTmpMaxMod = "StrModTmpMaxMod"
	StrModTmpMin    = "StrModTmpMin"
	StrModTmpMinMod = "StrModTmpMinMod"
	StrNMod         = "StrNMod"
	StrSetCon       = "StrSetCon"
	StrSetEna       = "StrSetEna"
	StrSoC          = "StrSoC"
	StrSoH          = "StrSoH"
	StrSt           = "StrSt"
	StrVAvg         = "StrVAvg"
	StrVMax         = "StrVMax"
	StrVMaxStr      = "StrVMaxStr"
	StrVMin         = "StrVMin"
	StrVMinStr      = "StrVMinStr"
	V_SF            = "V_SF"
)

type Block803Repeat struct {
	StrNMod         uint16             `sunspec:"offset=0"`
	StrSt           sunspec.Bitfield32 `sunspec:"offset=1"`
	StrConFail      sunspec.Enum16     `sunspec:"offset=3"`
	StrSoC          uint16             `sunspec:"offset=4,sf=SoC_SF"`
	StrSoH          uint16             `sunspec:"offset=5,sf=SoH_SF"`
	StrA            int16              `sunspec:"offset=6,sf=A_SF"`
	StrCellVMax     uint16             `sunspec:"offset=7,sf=CellV_SF"`
	StrCellVMaxMod  uint16             `sunspec:"offset=8"`
	StrCellVMin     uint16             `sunspec:"offset=9,sf=CellV_SF"`
	StrCellVMinMod  uint16             `sunspec:"offset=10"`
	StrCellVAvg     uint16             `sunspec:"offset=11,sf=CellV_SF"`
	StrModTmpMax    int16              `sunspec:"offset=12,sf=ModTmp_SF"`
	StrModTmpMaxMod uint16             `sunspec:"offset=13"`
	StrModTmpMin    int16              `sunspec:"offset=14,sf=ModTmp_SF"`
	StrModTmpMinMod uint16             `sunspec:"offset=15"`
	StrModTmpAvg    int16              `sunspec:"offset=16,sf=ModTmp_SF"`
	StrDisRsn       sunspec.Enum16     `sunspec:"offset=17"`
	StrConSt        sunspec.Bitfield32 `sunspec:"offset=18"`
	StrEvt1         sunspec.Bitfield32 `sunspec:"offset=20"`
	StrEvt2         sunspec.Bitfield32 `sunspec:"offset=22"`
	StrEvtVnd1      sunspec.Bitfield32 `sunspec:"offset=24"`
	StrEvtVnd2      sunspec.Bitfield32 `sunspec:"offset=26"`
	StrSetEna       sunspec.Enum16     `sunspec:"offset=28,access=rw"`
	StrSetCon       sunspec.Enum16     `sunspec:"offset=29,access=rw"`
	Pad1            sunspec.Pad        `sunspec:"offset=30"`
	Pad2            sunspec.Pad        `sunspec:"offset=31"`
}

type Block803 struct {
	NStr         uint16              `sunspec:"offset=0"`
	NStrCon      uint16              `sunspec:"offset=1"`
	ModTmpMax    int16               `sunspec:"offset=2,sf=ModTmp_SF"`
	ModTmpMaxStr uint16              `sunspec:"offset=3"`
	ModTmpMaxMod uint16              `sunspec:"offset=4"`
	ModTmpMin    int16               `sunspec:"offset=5,sf=ModTmp_SF"`
	ModTmpMinStr uint16              `sunspec:"offset=6"`
	ModTmpMinMod uint16              `sunspec:"offset=7"`
	ModTmpAvg    uint16              `sunspec:"offset=8"`
	StrVMax      uint16              `sunspec:"offset=9,sf=V_SF"`
	StrVMaxStr   uint16              `sunspec:"offset=10"`
	StrVMin      uint16              `sunspec:"offset=11,sf=V_SF"`
	StrVMinStr   uint16              `sunspec:"offset=12"`
	StrVAvg      uint16              `sunspec:"offset=13,sf=V_SF"`
	StrAMax      int16               `sunspec:"offset=14,sf=A_SF"`
	StrAMaxStr   uint16              `sunspec:"offset=15"`
	StrAMin      int16               `sunspec:"offset=16,sf=A_SF"`
	StrAMinStr   uint16              `sunspec:"offset=17"`
	StrAAvg      int16               `sunspec:"offset=18,sf=A_SF"`
	NCellBal     uint16              `sunspec:"offset=19"`
	CellV_SF     sunspec.ScaleFactor `sunspec:"offset=20"`
	ModTmp_SF    sunspec.ScaleFactor `sunspec:"offset=21"`
	A_SF         sunspec.ScaleFactor `sunspec:"offset=22"`
	SoH_SF       sunspec.ScaleFactor `sunspec:"offset=23"`
	SoC_SF       sunspec.ScaleFactor `sunspec:"offset=24"`
	V_SF         sunspec.ScaleFactor `sunspec:"offset=25"`

	Repeats []Block803Repeat
}

func (block *Block803) GetId() sunspec.ModelId {
	return ModelID
}

func init() {
	smdx.RegisterModel(&smdx.ModelElement{
		Id:     ModelID,
		Name:   "lithium_ion_bank",
		Length: 58,
		Blocks: []smdx.BlockElement{
			{
				Length: 26,
				Points: []smdx.PointElement{
					{Id: NStr, Offset: 0, Type: typelabel.Uint16, Mandatory: true, Label: "String Count", Description: "Number of strings in the bank."},
					{Id: NStrCon, Offset: 1, Type: typelabel.Uint16, Mandatory: true, Label: "Connected String Count", Description: "Number of strings with contactor closed."},
					{Id: ModTmpMax, Offset: 2, Type: typelabel.Int16, ScaleFactor: "ModTmp_SF", Mandatory: true, Label: "Max Module Temperature", Description: "Maximum temperature for all modules in the bank."},
					{Id: ModTmpMaxStr, Offset: 3, Type: typelabel.Uint16, Label: "Max Module Temperature String", Description: "String containing the module with maximum temperature."},
					{Id: ModTmpMaxMod, Offset: 4, Type: typelabel.Uint16, Label: "Max Module Temperature Module", Description: "Module with maximum temperature."},
					{Id: ModTmpMin, Offset: 5, Type: typelabel.Int16, ScaleFactor: "ModTmp_SF", Units: "C", Mandatory: true, Label: "Min Module Temperature", Description: "Minimum temperature for all modules in the bank."},
					{Id: ModTmpMinStr, Offset: 6, Type: typelabel.Uint16, Label: "Min Module Temperature String", Description: "String containing the module with minimum temperature."},
					{Id: ModTmpMinMod, Offset: 7, Type: typelabel.Uint16, Label: "Min Module Temperature Module", Description: "Module with minimum temperature."},
					{Id: ModTmpAvg, Offset: 8, Type: typelabel.Uint16, Label: "Average Module Temperature", Description: "Average temperature for all modules in the bank."},
					{Id: StrVMax, Offset: 9, Type: typelabel.Uint16, ScaleFactor: "V_SF", Units: "V", Label: "Max String Voltage", Description: "Maximum string voltage for all strings in the bank."},
					{Id: StrVMaxStr, Offset: 10, Type: typelabel.Uint16, Label: "Max String Voltage String", Description: "String with maximum voltage."},
					{Id: StrVMin, Offset: 11, Type: typelabel.Uint16, ScaleFactor: "V_SF", Units: "V", Label: "Min String Voltage", Description: "Minimum string voltage for all strings in the bank."},
					{Id: StrVMinStr, Offset: 12, Type: typelabel.Uint16, Label: "Min String Voltage String", Description: "String with minimum voltage."},
					{Id: StrVAvg, Offset: 13, Type: typelabel.Uint16, ScaleFactor: "V_SF", Units: "V", Label: "Average String Voltage", Description: "Average string voltage for all strings in the bank."},
					{Id: StrAMax, Offset: 14, Type: typelabel.Int16, ScaleFactor: "A_SF", Units: "A", Label: "Max String Current", Description: "Maximum current of any string in the bank."},
					{Id: StrAMaxStr, Offset: 15, Type: typelabel.Uint16, Label: "Max String Current String", Description: "String with the maximum current."},
					{Id: StrAMin, Offset: 16, Type: typelabel.Int16, ScaleFactor: "A_SF", Units: "A", Label: "Min String Current", Description: "Minimum current of any string in the bank."},
					{Id: StrAMinStr, Offset: 17, Type: typelabel.Uint16, Label: "Min String Current String", Description: "String with the minimum current."},
					{Id: StrAAvg, Offset: 18, Type: typelabel.Int16, ScaleFactor: "A_SF", Units: "A", Label: "Average String Current", Description: "Average string current for all strings in the bank."},
					{Id: NCellBal, Offset: 19, Type: typelabel.Uint16, Label: "Battery Cell Balancing Count", Description: "Total number of cells that are currently being balanced."},
					{Id: CellV_SF, Offset: 20, Type: typelabel.ScaleFactor, Mandatory: true},
					{Id: ModTmp_SF, Offset: 21, Type: typelabel.ScaleFactor, Mandatory: true},
					{Id: A_SF, Offset: 22, Type: typelabel.ScaleFactor, Mandatory: true},
					{Id: SoH_SF, Offset: 23, Type: typelabel.ScaleFactor},
					{Id: SoC_SF, Offset: 24, Type: typelabel.ScaleFactor, Mandatory: true},
					{Id: V_SF, Offset: 25, Type: typelabel.ScaleFactor},
				},
			},
			{Name: "string",
				Length: 32,
				Type:   "repeating",
				Points: []smdx.PointElement{
					{Id: StrNMod, Offset: 0, Type: typelabel.Uint16, Mandatory: true, Label: "Module Count", Description: "Count of modules in the string."},
					{Id: StrSt, Offset: 1, Type: typelabel.Bitfield32, Mandatory: true, Label: "String Status", Description: "Current status of the string."},
					{Id: StrConFail, Offset: 3, Type: typelabel.Enum16, Label: "Connection Failure Reason", Description: ""},
					{Id: StrSoC, Offset: 4, Type: typelabel.Uint16, ScaleFactor: "SoC_SF", Units: "%", Mandatory: true, Label: "String State of Charge", Description: "Battery string state of charge, expressed as a percentage."},
					{Id: StrSoH, Offset: 5, Type: typelabel.Uint16, ScaleFactor: "SoH_SF", Units: "%", Label: "String State of Health", Description: "Battery string state of health, expressed as a percentage."},
					{Id: StrA, Offset: 6, Type: typelabel.Int16, ScaleFactor: "A_SF", Units: "A", Mandatory: true, Label: "String Current", Description: "String current measurement."},
					{Id: StrCellVMax, Offset: 7, Type: typelabel.Uint16, ScaleFactor: "CellV_SF", Units: "V", Mandatory: true, Label: "Max Cell Voltage", Description: "Maximum voltage for all cells in the string."},
					{Id: StrCellVMaxMod, Offset: 8, Type: typelabel.Uint16, Label: "Max Cell Voltage Module", Description: "Module containing the maximum cell voltage."},
					{Id: StrCellVMin, Offset: 9, Type: typelabel.Uint16, ScaleFactor: "CellV_SF", Units: "V", Mandatory: true, Label: "Min Cell Voltage", Description: "Minimum voltage for all cells in the string."},
					{Id: StrCellVMinMod, Offset: 10, Type: typelabel.Uint16, Label: "Min Cell Voltage Module", Description: "Module containing the minimum cell voltage."},
					{Id: StrCellVAvg, Offset: 11, Type: typelabel.Uint16, ScaleFactor: "CellV_SF", Units: "V", Mandatory: true, Label: "Average Cell Voltage", Description: "Average voltage for all cells in the string."},
					{Id: StrModTmpMax, Offset: 12, Type: typelabel.Int16, ScaleFactor: "ModTmp_SF", Units: "C", Mandatory: true, Label: "Max Module Temperature", Description: "Maximum temperature for all modules in the bank."},
					{Id: StrModTmpMaxMod, Offset: 13, Type: typelabel.Uint16, Label: "Max Module Temperature Module", Description: "Module with the maximum temperature."},
					{Id: StrModTmpMin, Offset: 14, Type: typelabel.Int16, ScaleFactor: "ModTmp_SF", Units: "C", Mandatory: true, Label: "Min Module Temperature", Description: "Minimum temperature for all modules in the bank."},
					{Id: StrModTmpMinMod, Offset: 15, Type: typelabel.Uint16, Label: "Min Module Temperature Module", Description: "Module with the minimum temperature."},
					{Id: StrModTmpAvg, Offset: 16, Type: typelabel.Int16, ScaleFactor: "ModTmp_SF", Units: "C", Mandatory: true, Label: "Average Module Temperature", Description: "Average temperature for all modules in the bank."},
					{Id: StrDisRsn, Offset: 17, Type: typelabel.Enum16, Label: "Disabled Reason", Description: "Reason why the string is currently disabled."},
					{Id: StrConSt, Offset: 18, Type: typelabel.Bitfield32, Label: "Contactor Status", Description: "Status of the contactor(s) for the string."},
					{Id: StrEvt1, Offset: 20, Type: typelabel.Bitfield32, Mandatory: true, Label: "String Event 1", Description: "Alarms, warnings and status values.  Bit flags."},
					{Id: StrEvt2, Offset: 22, Type: typelabel.Bitfield32, Label: "String Event 2", Description: "Alarms, warnings and status values.  Bit flags."},
					{Id: StrEvtVnd1, Offset: 24, Type: typelabel.Bitfield32, Label: "Vendor String Event Bitfield 1", Description: "Vendor defined events."},
					{Id: StrEvtVnd2, Offset: 26, Type: typelabel.Bitfield32, Label: "Vendor String Event Bitfield 2", Description: "Vendor defined events."},
					{Id: StrSetEna, Offset: 28, Type: typelabel.Enum16, Access: "rw", Label: "Enable/Disable String", Description: "Enables and disables the string."},
					{Id: StrSetCon, Offset: 29, Type: typelabel.Enum16, Access: "rw", Label: "Connect/Disconnect String", Description: "Connects and disconnects the string."},
					{Id: Pad1, Offset: 30, Type: typelabel.Pad, Mandatory: true, Label: "Pad", Description: "Pad register."},
					{Id: Pad2, Offset: 31, Type: typelabel.Pad, Mandatory: true, Label: "Pad", Description: "Pad register."},
				},
			},
		}})
}
